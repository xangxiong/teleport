/*
Copyright 2022 Gravitational, Inc.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package keys

import (
	"context"
	"time"

	"github.com/gravitational/trace"

	"github.com/gravitational/teleport/api/utils/retryutils"
)

// FindYubiKey will find a connected YubiKey and return its serial number. If no YubiKey is found,
// it will return a trace.NotFound error.
func FindYubiKey(ctx context.Context) (uint32, error) {
	return findYubiKey(ctx)
}

// FindYubiKeyWithRetry will find a connected YubiKey and return its serial number. If no YubiKey is found,
// it will continue to retry until a YubiKey is found or the given context is canceled.
func FindYubiKeyWithRetry(ctx context.Context) (uint32, error) {
	ctx, cancel := context.WithTimeout(ctx, time.Second*30)
	defer cancel()

	retry, err := retryutils.NewConstant(time.Millisecond * 500)
	if err != nil {
		return 0, trace.Wrap(err)
	}

	var serialNumber uint32
	err = retry.For(ctx, func() error {
		serialNumber, err = FindYubiKey(ctx)
		if err != nil && !trace.IsNotFound(err) {
			return retryutils.PermanentRetryError(err)
		}
		return trace.Wrap(err)
	})
	if err != nil {
		return 0, trace.Wrap(err)
	}

	return serialNumber, nil
}

// GetOrGenerateYubiKeyPrivateKey connects to the YubiKey with the given serialNumber and gets a
// private key matching the given touch requirement. This private key will either be newly generated
// or previously generated by a Teleport client and reused.
func GetOrGenerateYubiKeyPrivateKey(ctx context.Context, serialNumber uint32, touchRequired bool) (*PrivateKey, error) {
	return getOrGenerateYubiKeyPrivateKey(ctx, serialNumber, touchRequired)
}
